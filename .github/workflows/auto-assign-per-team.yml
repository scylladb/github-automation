name: run gh_project_automation.py

on:
  push:
  schedule:
  - cron: '0 0 * * *'

jobs:
  update_projects:
    name: Update project ${{ matrix.project-name }} for ${{ matrix.team }} members
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        team:
         - releng
         - storage
         - core-backend
         - core-frontend
         - Drivers-Team
        include:
          - team: releng
            project-name: Release_Engineering
            labels: "[]"
          - team: storage
            project-name: Storage
            labels: "[]"
          - team: core-backend
            project-name: Core_-_Backend
            labels: "['area/materialized views', 'area/udf', 'area/workload prioritization', 'area/ldap', 'area/wasm', 'area/encryption at rest', 'area/workload prioritization', 'area/materialized views', 'area/commitlog hard limit', 'area/commitlog', 'area/sec index']"
          - team: core-frontend
            project-name: Core_-_Frontend
            labels: "['area/guardrails', 'area/security', 'security/audit', 'area/alternator', 'area/alternator-streams']"
          - team: drivers-team
            project-name: Drivers-Team
            labels: "[]"
    steps:
      - name: checkout repo content
        uses: actions/checkout@v4 # checkout the repository content

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # install the python version needed

      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: execute gh_project_automation.py
        env:
          GITHUB_SECRET: ${{ secrets.ISSUE_ASSIGNMENT_TO_PROJECT_TOKEN }}
        run: python gh_project_automation.py $GITHUB_SECRET --team ${{ matrix.team }} --project-name ${{ matrix.project-name }} --labels "${{ matrix.labels }}" --update-project --weekly-reports

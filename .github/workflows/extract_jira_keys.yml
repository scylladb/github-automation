name: Extract Jira Keys

on:
  workflow_call:
    inputs:
      pr_title:
        required: true
        type: string
      pr_body:
        required: true
        type: string
    outputs:
      jira-keys-json:
        description: "JSON array of Jira keys"
        value: ${{ jobs.extract.outputs.jira-keys-json }}

jobs:
  extract:
    runs-on: ubuntu-latest
    outputs:
      jira-keys-json: ${{ steps.process.outputs.jira-keys-json }}
    steps:
      - id: save
        shell: bash
        run: |
          # Save PR title/body into files (no env injection)
          cat > pr_title.txt <<'EOF'
          ${{ inputs.pr_title }}
          EOF

          cat > pr_body.txt <<'EOF'
          ${{ inputs.pr_body }}
          EOF

      - id: process
        shell: bash
        run: |
          set -euo pipefail

          # Remove backtics and \r before locating jira keys
          title=$(tr -d '\r' < pr_title.txt | tr '\`' ' ')
          body=$(tr -d '\r' < pr_body.txt | tr '\`' ' ')

          echo "title: $title"
          echo "body: $body"
          
          > tickets.txt
          printf '%s\n' "$title" | grep -oE '[A-Z]+-[0-9]+' >> tickets.txt || true
          printf '%s\n' "$body"  | grep -iE '(close|closes|closed|fix|fixes|fixed|resolve|resolves|resolved)[[:space:]]*[: ][[:space:]]*((https?://[^[:space:]]*/browse/)?[A-Z]+-[0-9]+)' \
                                | grep -oE '[A-Z]+-[0-9]+' >> tickets.txt || true

          sort -u tickets.txt > unique_tickets.txt

          if [[ ! -s unique_tickets.txt ]]; then
            echo "No Jira keys found in PR title or body"
            echo 'jira-keys-json=["__NO_KEYS_FOUND__"]' >> "$GITHUB_OUTPUT"
          else
            echo "Found Jira tickets:"
            cat unique_tickets.txt

            json=$(awk '{printf "\"%s\",",$1}' unique_tickets.txt | sed 's/,$//')
            json="[${json}]"

            # Always emit valid outputs
            echo "jira-keys-json=$json" >> "$GITHUB_OUTPUT"
          fi
